//{"expression2/":{"expression2/_helloworld_.txt":"@name Hello World\r\n@inputs A B\r\n@outputs Add Sub Mul Div\r\n@outputs GreaterThan Highest Lowest\r\n@outputs Vector:vector\r\n@persist D\r\n@trigger all\r\n\r\nAdd = A + B\r\nSub = A - B\r\nMul = A * B\r\nDiv = A / B\r\n\r\nGreaterThan = A > B\r\n\r\nif(A > B) {\r\n    Highest = A, Lowest = B\r\n} else {\r\n    Highest = B, Lowest = A\r\n}\r\n\r\nVector = vec(A, B, 0)\r\nVector = Vector + vec(0, 0, A + B)\r\nVector = Vector:normalized()\r\n","expression2/tests/":{"expression2/tests/strict.txt":"## SHOULD_PASS:EXECUTE\r\n\r\n@strict\r\n\r\ntry {\r\n    # chatClk should throw an error for a NULL player parameter.\r\n    chatClk( noentity() )\r\n} catch(Err) {\r\n    assert(Err == \"Invalid player!\")\r\n\r\n    try {\r\n        # Nonexistent function stringcalls should be catchable\r\n        \"notreal\"()\r\n    } catch(Err) {\r\n        assert(Err == \"No such function: notreal(void)\")\r\n\r\n        try {\r\n            error(\"exit\")\r\n            # Chip should NOT exit here. error() will now throw separate table errors that are catchable and don't care about the name.\r\n        } catch(Err) {\r\n            assert(Err == \"exit\")\r\n\r\n            print(\"@strict tests passed (Unless there's an error after this)\")\r\n\r\n            try { exit() } catch(Err) {\r\n                error(\"exit() threw an error, when it should have exited the chip\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nerror(\"@strict did not throw an error in chatClk test\")\r\n","expression2/tests/regressions/":{"expression2/tests/regressions/2420.txt":"## SHOULD_PASS:EXECUTE\r\n\r\nlocal Ang = ang(1, 2, 3)\r\n\r\nassert(Ang:pitch() == 1)\r\nassert(Ang:yaw() == 2)\r\nassert(Ang:roll() == 3)\r\n\r\nassert(Ang == ang(1, 2, 3))\r\nassert(Ang * 2 == ang(2, 4, 6))\r\nassert(2 * Ang == ang(2, 4, 6))\r\n\r\nassert(Ang / 2 == ang(0.5, 1, 1.5))\r\nassert(2 / Ang == ang(2, 1, 2/3))\r\n\r\nassert(Ang + 2 == ang(3, 4, 5))\r\nassert(2 + Ang == ang(3, 4, 5))\r\n\r\nassert(Ang - 2 == ang(-1, 0, 1))\r\nassert(2 - Ang == ang(1, 0, -1))\r\n\r\nlocal Vec = vec(1, 2, 3)\r\n\r\nassert(Vec:x() == 1)\r\nassert(Vec:y() == 2)\r\nassert(Vec:z() == 3)\r\n\r\nassert(Vec == vec(1, 2, 3))\r\nassert(Vec * 2 == vec(2, 4, 6))\r\nassert(2 * Vec == vec(2, 4, 6))\r\n\r\nassert(Vec / 2 == vec(0.5, 1, 3/2))\r\nassert(2 / Vec == vec(2, 1, 2/3))\r\n\r\nassert(Vec + 2 == vec(3, 4, 5))\r\nassert(2 + Vec == vec(3, 4, 5))\r\n\r\nassert(Vec - 2 == vec(-1, 0, 1))\r\nassert(2 - Vec == vec(1, 0, -1))","expression2/tests/regressions/2481.txt":"## SHOULD_FAIL:EXECUTE\r\n\r\nlocal Dead = 1\r\nerror(\"failure\")","expression2/tests/regressions/2465.txt":"## SHOULD_PASS:COMPILE\r\n\r\n@inputs Test#comment1\r\n@outputs Output#comment2\r\n@persist Persist#comment3\r\n","expression2/tests/regressions/1975.txt":"## SHOULD_PASS:EXECUTE\r\n\r\nvec() * 0\r\n0 * vec()\r\n\r\nCalls = 0\r\nfunction number f() {\r\n\tCalls++\r\n\treturn 1\r\n}\r\nf() * 0\r\n0 * f()\r\nassert(Calls == 2)\r\n","expression2/tests/regressions/2403.txt":"## SHOULD_PASS:EXECUTE\r\n\r\nfor(I = 1, 2) { # Needs to iterate at least twice?\r\n\tswitch (I) {\r\n\t\tdefault,\r\n\t\tbreak # This is also necessary\r\n\t}\r\n}\r\n\r\nfor(Other = 1, 1) {\r\n\tassert(Other == 1)\r\n}","expression2/tests/regressions/2388.txt":"## SHOULD_FAIL:COMPILE\r\nswitch (1) {\r\n\tcase 2,\r\n\t\tlocal A = 55\r\n\t\tbreak\r\n\r\n\tdefault,\r\n\t\t# This should not compile, A is inside another scope\r\n\t\tmin(A, 5)\r\n}"},"expression2/tests/parsing.txt":"## SHOULD_PASS:COMPILE\r\n\r\n@name Parsing Test\r\n@persist [XYZ ZYX]:number FOO BAR:entity\r\n@inputs In\r\n@outputs Out\r\n@strict\r\n@trigger none\r\n\r\n#[ Comment ]#\r\n# Single line\r\n\r\nStr = \"abcdefghijklm\r\nnopqrs\\n\\t\\r\\a\\v\\b\\\\\"\r\n\r\nNum1 = 0x2042\r\nNum2 = 0b00111001\r\nNum3 = 2432.2352\r\nNum4 = 2193e2\r\nNum5 = 2j + 4.4k + k + j\r\nNum6 = 3i + 2.7i + i\r\n\r\nfunction f() {}\r\nfunction r() { return }\r\n\r\nfunction number test() { return 55 }\r\nfunction entity:test() { return void }\r\nfunction number test(X, Y: vector) { return X }\r\nfunction number test([X Y]) { return X + Y }\r\nfunction number test([X Y]: number) { return X + Y }\r\n\r\nfunction number entity:test(...Variadic:array) {\r\n\tExpression = ( test() + 2 )\r\n\treturn Expression\r\n}\r\n\r\nlocal Var = 2\r\nswitch (2) {\r\n\tcase 1,\r\n\t\tbreak\r\n\r\n\tcase Var,\r\n\t\tbreak\r\n\r\n\tdefault,\r\n\t\tbreak\r\n}\r\n\r\nlocal A = 1\r\nif (A) {} elseif(2) {} else {}\r\nwhile (A) { A = 0 }\r\n\r\nfor (B = 1, 2) { A = 0 }\r\nfor (B = 1, 2, 3) { A = 0 }\r\n\r\nforeach (K, V: number = array(1, 2, 3)) { A = 0 }\r\n\r\nwhile (A) { break }\r\nwhile (A) { continue }\r\n\r\ndo { A = 0 } while (A)\r\ndo { break } while (A)\r\ndo { continue } while (A)\r\n\r\ntry {} catch(Err) {}\r\n\r\nevent tick() {}\r\nevent chat(_:entity, _:string, _) {}\r\n\r\nfor (_ = 1, 5) {}\r\nforeach (K:number, _:entity = table()) {}\r\nforeach (_, _:entity = table()) {}\r\n\r\nfunction unimplemented(_) {}\r\nunimplemented(5)\r\n\r\ntry {} catch(_) {}\r\n\r\n\r\nA++\r\nA--\r\nA += 1\r\nA -= 1\r\nA *= 1\r\nA /= 1\r\n\r\nTernary = 1 ?: 2\r\nTernary2 = 1 ? 2 : 1\r\n\r\nOps = !(+(-(0 >> 1 << 2 * 3 + 4 - 5 / 6 % 7 && 8 || 9 != 10 == 11 <= 12 >= 13 ^^ 14)))\r\nLogical = 0 | 1 & 2 != 3 == 4\r\n\r\narray():count()\r\narray()[1, number]\r\ntable(1 = 1, 2 = 2)\r\n\r\n~In\r\n$In\r\n->In\r\n\r\n0\r\n1\r\n\"Hello\"\r\n\r\nX = _PI\r\n\r\n#ifdef print(...)\r\n#else\r\n#endif\r\n\r\n#ifndef print(...)\r\n#else\r\n#endif"}},"soundlists/":{"soundlists/common_sounds.txt":"AlyxEMP.Charge | property\r\nAlyxEMP.Discharge | property\r\nAlyxEMP.Stop | property\r\nBaseExplosionEffect.Sound | property\r\nBaseGrenade.BounceSound | property\r\nBaseGrenade.Explode | property\r\nBaseGrenade.StopSounds | property\r\nBullets.DefaultNearmiss | property\r\nBullets.GunshipNearmiss | property\r\nBullets.StriderNearmiss | property\r\nFX_RicochetSound.Ricochet | property\r\nFuncTank.Fire | property\r\nFunc_Tank.BeginUse | property\r\nGenericNPC.GunSound | property\r\nGrenade.Blip | property\r\nGrenadeBeam.HitSound | property\r\nGrenadeBottle.Detonate | property\r\nGrenadeBugBait.Splat | property\r\nGrenadeHomer.StopSounds | property\r\nGrenadePathfollower.StopSounds | property\r\nGrenadeScanner.StopSound | property\r\nGrenade_Molotov.Detonate | property\r\nTripwireGrenade.ShootRope | property\r\nWaterExplosionEffect.Sound | property\r\nWeaponFrag.Roll | property\r\nWeaponFrag.Throw | property\r\nWeapon_357.OpenLoader | property\r\nWeapon_357.Reload | property\r\nWeapon_357.RemoveLoader | property\r\nWeapon_357.ReplaceLoader | property\r\nWeapon_357.Single | property\r\nWeapon_357.Spin | property\r\nWeapon_AR2.Double | property\r\nWeapon_AR2.Empty | property\r\nWeapon_AR2.NPC_Double | property\r\nWeapon_AR2.NPC_Reload | property\r\nWeapon_AR2.NPC_Single | property\r\nWeapon_AR2.Reload | property\r\nWeapon_AR2.Reload_Push | property\r\nWeapon_AR2.Reload_Rotate | property\r\nWeapon_AR2.Single | property\r\nWeapon_AR2.Special1 | property\r\nWeapon_AR2.Special2 | property\r\nWeapon_Binoculars.Reload | property\r\nWeapon_Binoculars.Special1 | property\r\nWeapon_Binoculars.Special2 | property\r\nWeapon_Brickbat.Special1 | property\r\nWeapon_Bugbait.Splat | property\r\nWeapon_CombineGuard.Special1 | property\r\nWeapon_Crossbow.BoltElectrify | property\r\nWeapon_Crossbow.BoltFly | property\r\nWeapon_Crossbow.BoltHitBody | property\r\nWeapon_Crossbow.BoltHitWorld | property\r\nWeapon_Crossbow.BoltSkewer | property\r\nWeapon_Crossbow.Reload | property\r\nWeapon_Crossbow.Single | property\r\nWeapon_Crowbar.Melee_Hit | property\r\nWeapon_Crowbar.Melee_HitWorld | property\r\nWeapon_Crowbar.Single | property\r\nWeapon_Extinguisher.Double | property\r\nWeapon_Extinguisher.Empty | property\r\nWeapon_Extinguisher.NPC_Double | property\r\nWeapon_Extinguisher.NPC_Reload | property\r\nWeapon_Extinguisher.NPC_Single | property\r\nWeapon_Extinguisher.Reload | property\r\nWeapon_Extinguisher.Single | property\r\nWeapon_Extinguisher.Special1 | property\r\nWeapon_FlareGun.Burn | property\r\nWeapon_FlareGun.Reload | property\r\nWeapon_FlareGun.Single | property\r\nWeapon_Gauss.ChargeLoop | property\r\nWeapon_IRifle.Empty | property\r\nWeapon_IRifle.Single | property\r\nWeapon_MegaPhysCannon.Charge | property\r\nWeapon_MegaPhysCannon.ChargeZap | property\r\nWeapon_MegaPhysCannon.Drop | property\r\nWeapon_MegaPhysCannon.DryFire | property\r\nWeapon_MegaPhysCannon.HoldSound | property\r\nWeapon_MegaPhysCannon.Launch | property\r\nWeapon_MegaPhysCannon.Pickup | property\r\nWeapon_Mortar.Impact | property\r\nWeapon_Mortar.Incomming | property\r\nWeapon_Mortar.Single | property\r\nWeapon_PhysCannon.Charge | property\r\nWeapon_PhysCannon.CloseClaws | property\r\nWeapon_PhysCannon.Drop | property\r\nWeapon_PhysCannon.DryFire | property\r\nWeapon_PhysCannon.HoldSound | property\r\nWeapon_PhysCannon.Launch | property\r\nWeapon_PhysCannon.OpenClaws | property\r\nWeapon_PhysCannon.Pickup | property\r\nWeapon_PhysCannon.TooHeavy | property\r\nWeapon_Physgun.HeavyObject | property\r\nWeapon_Physgun.LightObject | property\r\nWeapon_Physgun.LockedOn | property\r\nWeapon_Physgun.Off | property\r\nWeapon_Physgun.On | property\r\nWeapon_Physgun.Scanning | property\r\nWeapon_Physgun.Special1 | property\r\nWeapon_Pistol.Burst | property\r\nWeapon_Pistol.Empty | property\r\nWeapon_Pistol.NPC_Reload | property\r\nWeapon_Pistol.NPC_Single | property\r\nWeapon_Pistol.Reload | property\r\nWeapon_Pistol.Single | property\r\nWeapon_Pistol.Special1 | property\r\nWeapon_Pistol.Special2 | property\r\nWeapon_RPG.LaserOff | property\r\nWeapon_RPG.LaserOn | property\r\nWeapon_RPG.NPC_Single | property\r\nWeapon_RPG.Single | property\r\nWeapon_SMG1.Burst | property\r\nWeapon_SMG1.Double | property\r\nWeapon_SMG1.Empty | property\r\nWeapon_SMG1.NPC_Reload | property\r\nWeapon_SMG1.NPC_Single | property\r\nWeapon_SMG1.Reload | property\r\nWeapon_SMG1.Single | property\r\nWeapon_SMG1.Special1 | property\r\nWeapon_SMG1.Special2 | property\r\nWeapon_Shotgun.Double | property\r\nWeapon_Shotgun.Empty | property\r\nWeapon_Shotgun.NPC_Reload | property\r\nWeapon_Shotgun.NPC_Single | property\r\nWeapon_Shotgun.Reload | property\r\nWeapon_Shotgun.Single | property\r\nWeapon_Shotgun.Special1 | property\r\nWeapon_SniperRifle.NPC_Reload | property\r\nWeapon_SniperRifle.NPC_Single | property\r\nWeapon_SniperRifle.Reload | property\r\nWeapon_SniperRifle.Single | property\r\nWeapon_SniperRifle.Special1 | property\r\nWeapon_SniperRifle.Special2 | property\r\nWeapon_StunStick.Activate | property\r\nWeapon_StunStick.Deactivate | property\r\nWeapon_StunStick.Melee_Hit | property\r\nWeapon_StunStick.Melee_HitWorld | property\r\nWeapon_StunStick.Melee_Miss | property\r\nWeapon_StunStick.Swing | property\r\nWeapon_functank.Single | property\r\n"}}